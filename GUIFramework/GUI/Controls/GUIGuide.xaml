<base:GUIControl x:Class="GUIFramework.GUI.Controls.GUIGuide"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
		     xmlns:base="clr-namespace:GUIFramework.GUI"
			  xmlns:converters="clr-namespace:GUIFramework.Converters"
			 xmlns:commonControls="clr-namespace:MPDisplay.Common.Controls;assembly=MPDisplay.UICommon"
             mc:Ignorable="d" 
			 x:Name="UI"
             d:DesignHeight="300" d:DesignWidth="300" 
			 Canvas.Left="{Binding BaseXml.PosX,Mode=OneWay}"
			 Canvas.Top="{Binding BaseXml.PosY,Mode=OneWay}"
			 Canvas.ZIndex="{Binding BaseXml.PosZ,Mode=OneWay}"
			 Width="{Binding BaseXml.Width,Mode=OneWay}" 
			 Height="{Binding BaseXml.Height,Mode=OneWay}"
			 Visibility="{Binding IsControlVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
    <!-- 			 RotationX="{Binding BaseXml.Pos3DX,Mode=OneWay}"
			 RotationY="{Binding BaseXml.Pos3DY,Mode=OneWay}"
			 RotationZ="{Binding BaseXml.Pos3DZ,Mode=OneWay}"
			 RotationCenterX="{Binding BaseXml.Center3DX,Mode=OneWay}"
			 RotationCenterY="{Binding BaseXml.Center3DY,Mode=OneWay}"
			 RotationCenterZ="{Binding BaseXml.Center3DZ,Mode=OneWay}"
-->
	<Grid >

		<Grid.Resources>
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
			<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
			<converters:ProgramTimeToWidthConverter x:Key="ProgramWidthConverter" />

			<Style TargetType="ListBox">
				<Setter Property="BorderBrush" Value="{x:Null}" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Background" Value="{x:Null}" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
				<Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="False" />
				<Setter Property="VirtualizingPanel.IsVirtualizing" Value="False" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
				<Setter Property="ScrollViewer.PanningRatio" Value="1"/>
			</Style>

			<Style TargetType="ListBoxItem">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="Height" Value="{Binding BaseXml.GuideItemHeight, ElementName=UI}" />
				<Setter Property="VerticalContentAlignment" Value="Top" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>


			<Style x:Key="ProgramItem" TargetType="ContentPresenter">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
				<Setter Property="Height" Value="{Binding BaseXml.GuideItemHeight, ElementName=UI}" />
				<Setter Property="Canvas.Left">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource ProgramWidthConverter}" ConverterParameter="ProgramPosition">
							<Binding />
							<Binding Path="TimelineStart" ElementName="UI"/>
							<Binding Path="TimelineMultiplier" ElementName="UI"/>
						</MultiBinding>
					</Setter.Value>
				</Setter>
				<Setter Property="Width">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource ProgramWidthConverter}" ConverterParameter="ProgramWidth">
							<Binding />
							<Binding Path="TimelineStart" ElementName="UI"/>
							<Binding Path="TimelineMultiplier" ElementName="UI"/>
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="TimelineItem" TargetType="ListBoxItem">
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Margin" Value="-1" />
				<Setter Property="Padding" Value="0" />
				<Setter Property="Height" Value="{Binding BaseXml.TimelineHeight, ElementName=UI}" />
				<Setter Property="VerticalContentAlignment" Value="Top" />
				<Setter Property="HorizontalContentAlignment" Value="Stretch" />
				<Setter Property="Canvas.Left">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource ProgramWidthConverter}" ConverterParameter="ProgramPosition">
							<Binding />
							<Binding Path="TimelineStart" ElementName="UI"/>
							<Binding Path="TimelineMultiplier" ElementName="UI"/>
						</MultiBinding>
					</Setter.Value>
				</Setter>
				<Setter Property="Width">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource ProgramWidthConverter}" ConverterParameter="ProgramWidth">
							<Binding />
							<Binding Path="TimelineStart" ElementName="UI"/>
							<Binding Path="TimelineMultiplier" ElementName="UI"/>
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</Style>


			<Style x:Key="TimelineTextblock" TargetType="TextBlock">
				<Setter Property="Foreground" Value="{Binding BaseXml.ControlStyle.TimelineFontBrush, Converter={StaticResource GUIBrushConverter}, ElementName=UI}" />
				<Setter Property="FontFamily" Value="{Binding BaseXml.ControlStyle.TimelineFontType, Converter={StaticResource GUIFontConverter}, ElementName=UI}" />
				<Setter Property="FontSize" Value="{Binding BaseXml.ControlStyle.TimelineFontSize, ElementName=UI}" />
				<Setter Property="FontWeight" Value="{Binding BaseXml.ControlStyle.TimelineFontWeight, Converter={StaticResource GUIFontConverter}, ElementName=UI}" />
				<Setter Property="HorizontalAlignment" Value="{Binding BaseXml.ControlStyle.TimelineLabelHorizontalAlignment, ElementName=UI}" />
				<Setter Property="VerticalAlignment" Value="{Binding BaseXml.ControlStyle.TimelineLabelVerticalAlignment, ElementName=UI}" />
			</Style>

			<Style x:Key="TimelineBorder" TargetType="Border">
				<Setter Property="CornerRadius" Value="{Binding BaseXml.ControlStyle.TimelineItemCornerRadius, Converter={StaticResource GUICornerRadiusConverter}, ElementName=UI}"  />
				<Setter Property="BorderBrush" Value="{Binding BaseXml.ControlStyle.TimelineItemBorderBrush, Converter={StaticResource GUIBrushConverter}, ElementName=UI}" />
				<Setter Property="BorderThickness" Value="{Binding BaseXml.ControlStyle.TimelineItemBorderThickness, Converter={StaticResource GUIThicknessConverter}, ElementName=UI}" />
				<Setter Property="Margin" Value="{Binding BaseXml.GuideItemMargin, Converter={StaticResource GUIThicknessConverter}, ElementName=UI}" />
			</Style>

		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="{Binding BaseXml.TimelineHeight}" />
			<RowDefinition />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="{Binding BaseXml.ChannelListWidth}" />
			<ColumnDefinition  />
		</Grid.ColumnDefinitions>

		<!--Timeline -->
		<Border x:Name="timelineBorder" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" 
			        BorderBrush="{Binding BaseXml.ControlStyle.TimelineBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}"
					BorderThickness="{Binding BaseXml.ControlStyle.TimelineBorderThickness, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"
					CornerRadius="{Binding BaseXml.ControlStyle.TimelineCornerRadius, Converter={StaticResource GUICornerRadiusConverter},Mode=OneWay, ElementName=UI}"
			        Background="{Binding BaseXml.ControlStyle.TimelineBackground, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}"
				    Height="{Binding BaseXml.TimelineHeight}"/>

		<!--Timeline Info-->
		<Border Grid.Row="0" Grid.Column="0" Style="{StaticResource TimelineBorder}" >
			<TextBlock x:Name="timelineDate" Style="{StaticResource TimelineTextblock}" Text="{Binding TimelineInfo}" />
		</Border>

		<!--Timeline List-->
		<ListBox x:Name="timelineListBox" Grid.Row="0" Grid.Column="1" Padding="0"
			         Height="{Binding BaseXml.TimelineHeight}"  
			         ItemContainerStyle="{StaticResource TimelineItem}"  
					 ItemsSource="{Binding Timeline}" 
					 ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
					 ScrollViewer.VerticalScrollBarVisibility="Disabled" 
					 ScrollViewer.ScrollChanged="ListBox_ScrollChanged">
			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<Canvas IsItemsHost="True" Width="{Binding TimelineLength}"/>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>
			<ListBox.ItemTemplate>
				<DataTemplate>
					<Grid Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" >
						<Border Style="{StaticResource TimelineBorder}" >
							<TextBlock Text="{Binding Title}" Style="{StaticResource TimelineTextblock}" />
						</Border>
					</Grid>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>

		<!--Channel List-->
		<Border Grid.Row="1" Grid.Column="0" 
			        BorderBrush="{Binding BaseXml.ControlStyle.ChannelListBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}"
					BorderThickness="{Binding BaseXml.ControlStyle.ChannelListBorderThickness, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"
					CornerRadius="{Binding BaseXml.ControlStyle.ChannelListCornerRadius, Converter={StaticResource GUICornerRadiusConverter},Mode=OneWay, ElementName=UI}"
			        Background="{Binding BaseXml.ControlStyle.ChannelListBackgroundBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}">
			<ListBox Margin="0,1,0,0" x:Name="channelListBox"  
			         SelectedItem="{Binding SelectedChannel}" 
					 ItemsSource="{Binding ChannelData, IsAsync=True, Mode=OneWay}"  
					 ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
					 ScrollViewer.ScrollChanged="ListBox_ScrollChanged">
				<ListBox.ItemTemplate>
					<DataTemplate >
						<Border x:Name="focus"
								Margin="{Binding BaseXml.GuideItemMargin, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"  
								BorderThickness="{Binding BaseXml.ChannelStyle.BorderThickness, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"
								CornerRadius="{Binding BaseXml.ChannelStyle.CornerRadius, Converter={StaticResource GUICornerRadiusConverter},Mode=OneWay, ElementName=UI}" >
							<Border.Style>
								<Style TargetType="Border" >
									<Setter Property="Background" Value="{Binding BaseXml.ChannelStyle.NoFocusBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
									<Setter Property="BorderBrush" Value="{Binding BaseXml.ChannelStyle.NoFocusBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
											<Setter Property="Background" Value="{Binding BaseXml.ChannelStyle.FocusBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
											<Setter Property="BorderBrush" Value="{Binding BaseXml.ChannelStyle.FocusBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Border.Style>
							<Grid>
								<Border x:Name="Shading" 
                                        Background="{Binding BaseXml.ChannelStyle.ShadeBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" 
                                        CornerRadius="{Binding ElementName=focus, Path=CornerRadius,Mode=OneWay}">
									<Grid>
										<Border Margin="{Binding BaseXml.ChannelStyle.ImageMargin,Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}" x:Name="imgBorder"
												HorizontalAlignment="{Binding BaseXml.ChannelStyle.ImageHorizontalAlignment,Mode=OneWay, ElementName=UI}" 
												VerticalAlignment="{Binding BaseXml.ChannelStyle.ImageVerticalAlignment,Mode=OneWay, ElementName=UI}" 
												Visibility="{Binding BaseXml.ChannelStyle.EnableImage, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, ElementName=UI}">
											<commonControls:RoundedImage 
													      Stretch="{Binding BaseXml.ChannelStyle.ImageStretch,Mode=OneWay, ElementName=UI}"
														Source="{Binding Logo}"
														  CornerRadius="{Binding BaseXml.ChannelStyle.ImageCornerRadius,Mode=OneWay, ElementName=UI}"  >
											</commonControls:RoundedImage>
										</Border>

										<TextBlock Text="{Binding Name, Mode=OneWay}"
													HorizontalAlignment="{Binding BaseXml.ChannelStyle.LabelHorizontalAlignment,Mode=OneWay, ElementName=UI}"
													VerticalAlignment="{Binding BaseXml.ChannelStyle.LabelVerticalAlignment,Mode=OneWay, ElementName=UI}"
													FontFamily="{Binding BaseXml.ChannelStyle.FontType, Converter={StaticResource GUIFontConverter},Mode=OneWay, ElementName=UI}" 
													FontSize="{Binding BaseXml.ChannelStyle.FontSize,Mode=OneWay, ElementName=UI}" 
													FontWeight="{Binding BaseXml.ChannelStyle.FontWeight, Converter={StaticResource GUIFontConverter},Mode=OneWay, ElementName=UI}"
													Margin="{Binding BaseXml.ChannelStyle.LabelMargin, ElementName=UI}" 
													Visibility="{Binding BaseXml.ChannelStyle.EnableLabel, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, ElementName=UI}">
											<TextBlock.Style>
												<Style TargetType="TextBlock">
													<Setter Property="Foreground" Value="{Binding BaseXml.ChannelStyle.NoFocusFontBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
													<Style.Triggers>
														<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
															<Setter Property="Foreground" Value="{Binding BaseXml.ChannelStyle.FocusFontBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</TextBlock.Style>
										</TextBlock>
									</Grid>
								</Border>
								<Border x:Name="Gloss" Background="{Binding BaseXml.ChannelStyle.GlossBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" CornerRadius="{Binding ElementName=focus, Path=CornerRadius,Mode=OneWay}" />
							</Grid>
						</Border>

					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</Border>

		<!--Program List-->
		<Border Grid.Row="1" Grid.Column="1" 
			        BorderBrush="{Binding BaseXml.ControlStyle.ProgramListBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}"
					BorderThickness="{Binding BaseXml.ControlStyle.ProgramListBorderThickness, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"
					CornerRadius="{Binding BaseXml.ControlStyle.ProgramListCornerRadius, Converter={StaticResource GUICornerRadiusConverter},Mode=OneWay, ElementName=UI}"
			        Background="{Binding BaseXml.ControlStyle.ProgramListBackgroundBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}">
			<ListBox x:Name="programListBox" 
			         SelectedItem="{Binding SelectedChannel}" 
					 ItemsSource="{Binding ChannelData, IsAsync=True, Mode=OneWay}"  
					 ScrollViewer.ScrollChanged="ListBox_ScrollChanged" >
               <ListBox.ItemTemplate>
					<DataTemplate>
                        <ItemsControl Background="Brown" Padding="0" Margin="1" 
						              Width="{Binding TimelineLength, ElementName=UI}" 
									  ItemContainerStyle="{StaticResource ProgramItem}"  
									  ItemsSource="{Binding Programs, IsAsync=True, Mode=OneWay}" 
									  ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
									  ScrollViewer.VerticalScrollBarVisibility="Disabled" >
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<Canvas IsItemsHost="True" Background="Blue" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
                                    <Border x:Name="focusp"  Tag="{Binding}" PreviewMouseDown="OnProgramItemSelected"
								Margin="{Binding BaseXml.GuideItemMargin, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"  
								BorderThickness="{Binding BaseXml.ProgramStyle.BorderThickness, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"
								CornerRadius="{Binding BaseXml.ProgramStyle.CornerRadius, Converter={StaticResource GUICornerRadiusConverter},Mode=OneWay, ElementName=UI}" >
										<Border.Style>
											<Style TargetType="Border" >
												<Setter Property="Background" Value="{Binding BaseXml.ProgramStyle.NoFocusBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
												<Setter Property="BorderBrush" Value="{Binding BaseXml.ProgramStyle.NoFocusBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
												<Style.Triggers>
													<DataTrigger Binding="{Binding IsCurrent}" Value="True">
														<Setter Property="Background" Value="{Binding BaseXml.ProgramStyle.OnNowBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
														<Setter Property="BorderBrush" Value="{Binding BaseXml.ProgramStyle.OnNowBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
													</DataTrigger>
													<DataTrigger Binding="{Binding IsRecording}" Value="True">
														<Setter Property="Background" Value="{Binding BaseXml.ProgramStyle.RecordingBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
														<Setter Property="BorderBrush" Value="{Binding BaseXml.ProgramStyle.RecordingBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
													</DataTrigger>
													<DataTrigger Binding="{Binding IsScheduled}" Value="True">
														<Setter Property="Background" Value="{Binding BaseXml.ProgramStyle.RecordingBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
														<Setter Property="BorderBrush" Value="{Binding BaseXml.ProgramStyle.RecordingBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
													</DataTrigger>
													<DataTrigger Binding="{Binding IsSelected}" Value="True">
														<Setter Property="Background" Value="{Binding BaseXml.ProgramStyle.FocusBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
														<Setter Property="BorderBrush" Value="{Binding BaseXml.ProgramStyle.FocusBorderBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Border.Style>
										<Grid>
											<Border x:Name="Shadingp" 
                                        Background="{Binding BaseXml.ProgramStyle.ShadeBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" 
                                        CornerRadius="{Binding ElementName=focusp, Path=CornerRadius,Mode=OneWay}">
												<Grid>
													<TextBlock Text="{Binding Title, Mode=OneWay}"
													HorizontalAlignment="{Binding BaseXml.ProgramStyle.LabelHorizontalAlignment,Mode=OneWay, ElementName=UI}"
													VerticalAlignment="{Binding BaseXml.ProgramStyle.LabelVerticalAlignment,Mode=OneWay, ElementName=UI}"
													FontFamily="{Binding BaseXml.ProgramStyle.FontType, Converter={StaticResource GUIFontConverter},Mode=OneWay, ElementName=UI}" 
													FontSize="{Binding BaseXml.ProgramStyle.FontSize,Mode=OneWay, ElementName=UI}" 
													FontWeight="{Binding BaseXml.ProgramStyle.FontWeight, Converter={StaticResource GUIFontConverter},Mode=OneWay, ElementName=UI}"
													Margin="{Binding BaseXml.ProgramStyle.LabelMargin, ElementName=UI}" >
														<TextBlock.Style>
															<Style TargetType="TextBlock">
																<Setter Property="Foreground" Value="{Binding BaseXml.ProgramStyle.NoFocusFontBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
																<Style.Triggers>
																	<DataTrigger Binding="{Binding IsCurrent}" Value="True">
																		<Setter Property="Foreground" Value="{Binding BaseXml.ProgramStyle.OnNowFontBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
																	</DataTrigger>
																	<DataTrigger Binding="{Binding IsRecording}" Value="True">
																		<Setter Property="Foreground" Value="{Binding BaseXml.ProgramStyle.RecordingFontBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
																	</DataTrigger>
																	<DataTrigger Binding="{Binding IsScheduled}" Value="True">
																		<Setter Property="Foreground" Value="{Binding BaseXml.ProgramStyle.RecordingFontBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
																	</DataTrigger>
																	<DataTrigger Binding="{Binding IsSelected}" Value="True">
																		<Setter Property="Foreground" Value="{Binding BaseXml.ProgramStyle.FocusFontBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" />
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</TextBlock.Style>
													</TextBlock>
												</Grid>
											</Border>
											<Border x:Name="Gloss" Background="{Binding BaseXml.ProgramStyle.GlossBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay, ElementName=UI}" CornerRadius="{Binding ElementName=focusp, Path=CornerRadius,Mode=OneWay}" />
										</Grid>
									</Border>

								</DataTemplate>

							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</Border>

		<ScrollViewer x:Name="markerScrollviewer" Grid.Row="1" Grid.Column="1" IsHitTestVisible="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
			<Canvas x:Name="c" Width="{Binding TimelineLength}" Height="{Binding ActualHeight, ElementName=programListBox}" >
				<Line X1="0" X2="0" Y1="0" Y2="{Binding ActualHeight, ElementName=c}" Width="10" Height="{Binding ActualHeight, ElementName=c}" 
			 		      Canvas.Left="{Binding TimelineCenterPosition}" 
						  Stroke="{Binding BaseXml.ControlStyle.TimelineMarkerBrush, Converter={StaticResource GUIBrushConverter}}" 
						  StrokeThickness="{Binding BaseXml.ControlStyle.TimelineMarkerThickness}">
				</Line>
			</Canvas>
		</ScrollViewer>

	</Grid>
</base:GUIControl>
