<Window xmlns:Controls="clr-namespace:MPDisplay.Common.Controls;assembly=MPDisplay.UICommon"  x:Class="GUISkinFramework.Editor.PropertyEditors.AnimationEditorDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:xmlAnimations="clr-namespace:GUISkinFramework.Animations"
    xmlns:local="clr-namespace:GUISkinFramework.Editor.PropertyEditors"
        xmlns:PropertyGrid="clr-namespace:MPDisplay.Common.Controls.PropertyGrid;assembly=MPDisplay.UICommon" 
       
        Title="Action Editor"  Width="1200" Height="580" WindowStartupLocation="CenterOwner" x:Name="UI">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="AnimationConditions">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="xmlAnimations:XmlAnimationCondition" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="AnimationTypes">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:AnimationType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


    


        <Style TargetType="Image">
            <Setter Property="Opacity" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid DataContext="{Binding ElementName=UI}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="218"/>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Button Content="OK" HorizontalAlignment="Right" Margin="0,0,90,10" VerticalAlignment="Bottom" Width="75" Click="Button_OK_Click" Height="22" Grid.Column="2">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="IsEnabled" Value="True" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding XmlActions.Count}" Value="0" >
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Cancel" HorizontalAlignment="Right" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="75" Click="Button_Cancel_Click" Grid.Column="2" Height="22"/>



        <StackPanel  Margin="10,10,10,0" VerticalAlignment="Top" Height="57" >
            <TextBlock TextWrapping="Wrap" Text="Animation Condition"/>
            <ComboBox ItemsSource="{Binding AnimationConditions}" SelectedItem="{Binding SelectedAnimationCondition}" />
            <TextBlock Margin="0,3,0,0" TextWrapping="Wrap" Text="{Binding SelectedAnimationCondition, StringFormat={}{0} Animations, FallbackValue=Animations}" />
          
        </StackPanel>

        <ListBox SelectedIndex="0" ItemsSource="{Binding FilteredList}" SelectedItem="{Binding SelectedAnimation}" DisplayMemberPath="DisplayName" Margin="10,67,10,37" />

        <Grid Margin="10,0,10,10" Height="22" VerticalAlignment="Bottom" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="110"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Height="22" VerticalAlignment="Top" Grid.Column="1" HorizontalAlignment="Right" Width="110">
                <StackPanel.Resources>
                   
                </StackPanel.Resources>
                
                <Button  Height="22"  Width="24" Click="Button_Add_Click">
                    <Image Margin="2" Source="/MPDisplay.UICommon;component/Controls/Images/Add2.png" Stretch="Uniform" />
                </Button>
                <Button Margin="2,0,0,0" Width="24" Height="22"  Click="Button_Remove_Click">
                    <Image Margin="2" Source="/MPDisplay.UICommon;component/Controls/Images/Delete16.png" Stretch="Uniform" />
                </Button>
                <Button Margin="10,0,0,0" Width="24" Height="22"  Click="Button_MoveUp_Click">
                    <Image Margin="2" Source="/MPDisplay.UICommon;component/Controls/Images/Up.png" Stretch="Uniform" />
                </Button>
                <Button Margin="2,0,0,0"  Width="24" Height="22" Click="Button_MoveDown_Click">
                    <Image Margin="2" Source="/MPDisplay.UICommon;component/Controls/Images/Down.png" Stretch="Uniform" />
                </Button>
             
            </StackPanel>
            <ComboBox Margin="0,0,2,0" ItemsSource="{Binding Source={StaticResource AnimationTypes}}" SelectedItem="{Binding SelectedAnimationType}"/>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedAnimationCondition}" Value="None">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <PropertyGrid:PropertyGrid SelectedObject="{Binding SelectedAnimation}" DisplaySummary="False" ShowSearchBox="False" ShowSortOptions="False" Grid.Column="1" Margin="10,26,7,10"/>



        <Border BorderBrush="Black" BorderThickness="1" Grid.Column="2" Margin="10,26,10,37" RenderTransformOrigin="0.15,0.556">
            <Viewbox Grid.Row="1" Margin="5" x:Name="veiw" StretchDirection="Both" >
                <Grid>
                    <Border BorderBrush="Black" BorderThickness="1"  Height="720" Width="1280">
                        <Canvas x:Name="surface"  ClipToBounds="True"  >
                            <Controls:Surface3D x:Name="animatedControl"
                                                
                                                Width="{Binding AnimatedElement.Width, Mode=OneWay}"
                                                Height="{Binding AnimatedElement.Height, Mode=OneWay}"
                                                Canvas.Left="{Binding AnimatedElement.PosX}" 
                                                Canvas.Top="{Binding AnimatedElement.PosY}"
                                                RotationX="{Binding AnimatedElement.Pos3DY}"
                                                RotationY="{Binding AnimatedElement.Pos3DY}"
                                                RotationZ="{Binding AnimatedElement.Pos3DY}"
                                                RotationCenterX="{Binding AnimatedElement.Center3DX}"
                                                RotationCenterY="{Binding AnimatedElement.Center3DY}"
                                                RotationCenterZ="{Binding AnimatedElement.Center3DZ}">
                                <Rectangle Fill="Black" Width="{Binding AnimatedElement.Width, Mode=OneWay}" Height="{Binding AnimatedElement.Height, Mode=OneWay}" />
                            </Controls:Surface3D>
                        </Canvas>
                    </Border>
                </Grid>
            </Viewbox>
        </Border>
        <Button Content="Play Selected" HorizontalAlignment="Left" Margin="10,0,0,10" VerticalAlignment="Bottom" Width="94" Click="Button_Play_Click" Height="22" Grid.Column="2">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedAnimation}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Play All" HorizontalAlignment="Left" Margin="109,0,0,10" VerticalAlignment="Bottom" Width="94" Click="Button_PlayAll_Click" Height="22" Grid.Column="2">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding FilteredList.Count}" Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding FilteredList.Count}" Value="1">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Reset" HorizontalAlignment="Left" Margin="236,0,0,10" VerticalAlignment="Bottom" Width="94" Click="Button_Reset_Click" Height="22" Grid.Column="2"/>

    </Grid>
</Window>
