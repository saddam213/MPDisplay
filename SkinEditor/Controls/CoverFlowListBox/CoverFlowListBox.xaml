<UserControl x:Class="SkinEditor.Controls.CoverFlowListBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
			 xmlns:controls="clr-namespace:MPDisplay.Common.Controls;assembly=MPDisplay.Common"
			 xmlns:local="clr-namespace:SkinEditor.Controls"
	
             d:DesignHeight="300" d:DesignWidth="300" Name="UI" >
	<UserControl.Resources>
		<local:CoverFlowGreaterThanSelectedIndexConverter  x:Key="GreaterThanSelectedIndexConverter" />
	
	</UserControl.Resources>
	<Grid DataContext="{Binding ElementName=UI}">
		<ListBox x:Name="listbox" ItemsSource="{Binding ListItems}"
		         VirtualizingPanel.VirtualizationMode="Recycling" 
				 VirtualizingPanel.IsContainerVirtualizable="True" 
				 VirtualizingPanel.IsVirtualizing="True" 
				 VirtualizingPanel.ScrollUnit="Pixel" 
				 VirtualizingPanel.CacheLengthUnit="Pixel" 
				 ScrollViewer.PanningMode="Both"
				 ScrollViewer.PanningRatio="1"
				 ScrollViewer.VerticalScrollBarVisibility="Hidden"
				 ScrollViewer.HorizontalScrollBarVisibility="Hidden"
				 Background="Transparent">

			<ListBox.Resources>
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
				<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
				<Style TargetType="ListBoxItem">
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />
					<Setter Property="VerticalAlignment" Value="{Binding CurrentLayout.VerticalAlignment, ElementName=UI}" />
					<Setter Property="HorizontalAlignment" Value="{Binding CurrentLayout.HorizontalAlignment, ElementName=UI}" />
					<EventSetter Event="PreviewMouseLeftButtonUp" Handler="ListItem_MouseButtonUp" />
					<EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListItem_MouseButtonDown" />
					<EventSetter Event="MouseLeave" Handler="ListItem_MouseLeave" />
				</Style>
			</ListBox.Resources>

			<ListBox.Style>
				<Style TargetType="ListBox">
					<Setter Property="BorderBrush" Value="{x:Null}" />
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="ScrollViewer.PanningDeceleration" Value="0.009" />
					<Style.Triggers>
						<DataTrigger Binding="{Binding ListOrientation, ElementName=UI}" Value="Vertical" >
							<Setter Property="ScrollViewer.PanningDeceleration" Value="0.001" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</ListBox.Style>

			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel >
						<VirtualizingStackPanel.Style>
							<Style TargetType="VirtualizingStackPanel">
								<Setter Property="Orientation" Value="Horizontal" />
								<Setter Property="Margin" Value="0" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding ListOrientation, ElementName=UI}" Value="Vertical" >
										<Setter Property="Orientation" Value="Vertical" />
									</DataTrigger>
									<DataTrigger Binding="{Binding ListOrientation, ElementName=UI}" Value="Auto" >
										<Setter Property="Orientation" Value="Vertical" />
									</DataTrigger>
									<DataTrigger Binding="{Binding ListOrientation, ElementName=UI}" Value="CoverFlow" >
										<Setter Property="Margin" Value="0,20,0,20" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</VirtualizingStackPanel.Style>
					</VirtualizingStackPanel>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>

			<ListBox.ItemTemplate>
				<DataTemplate DataType="{x:Type local:CoverFlowListBoxItem}">
					<controls:Surface3D  x:Name="surface3d" IsHitTestVisible="False" UseLayoutRounding="True"
					Width="{Binding CurrentLayout.Width, ElementName=UI,Mode=OneWay}" 
					Height="{Binding CurrentLayout.Height, ElementName=UI,Mode=OneWay}"
					Margin="{Binding CurrentLayout.ItemMargin, Converter={StaticResource ThicknessConverter},Mode=OneWay, ElementName=UI}"  >
						<controls:Surface3D.LayoutTransform>
							<ScaleTransform  ScaleX="1"  ScaleY="1" />
						</controls:Surface3D.LayoutTransform>
						<controls:Surface3D.Style>
							<Style TargetType="{x:Type controls:Surface3D}">
								<Style.Triggers>
							


									<!--Layout CoverFlow //////////////////////////////////////////////////////////////////////////////////////////////////-->
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding ListOrientation, ElementName=UI}" Value="CoverFlow" />
											<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.EnterActions>
											<BeginStoryboard HandoffBehavior="SnapshotAndReplace" >
												<Storyboard >
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RotationY" To="0"  />
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="1.5" />
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleY" To="1.5" />
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.EnterActions>
										<MultiDataTrigger.ExitActions>
											<BeginStoryboard HandoffBehavior="SnapshotAndReplace" >
												<Storyboard>
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="1" />
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleY" To="1" />
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.ExitActions>
									</MultiDataTrigger>

									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding ListOrientation, ElementName=UI}" Value="CoverFlow" />
											<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False"/>
											<Condition Value="False">
												<Condition.Binding>
													<MultiBinding Converter="{StaticResource GreaterThanSelectedIndexConverter}" >
														<Binding Path="SelectedIndex" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" Mode="OneWay" />
														<Binding Path="Index" Mode="OneWay"/>
													</MultiBinding>
												</Condition.Binding>
											</Condition>
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.EnterActions>
											<BeginStoryboard Name="CLowerEnter" HandoffBehavior="SnapshotAndReplace" >
												<Storyboard>
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RotationY" To="20" />
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.EnterActions>
										<MultiDataTrigger.ExitActions>
											<StopStoryboard BeginStoryboardName="CLowerEnter"/>
										</MultiDataTrigger.ExitActions>
									</MultiDataTrigger>

									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding ListOrientation, ElementName=UI}" Value="CoverFlow" />
											<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False"/>
											<Condition Value="True">
												<Condition.Binding>
													<MultiBinding Converter="{StaticResource GreaterThanSelectedIndexConverter}" >
														<Binding Path="SelectedIndex" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" Mode="OneWay" />
														<Binding Path="Index" Mode="OneWay" />
													</MultiBinding>
												</Condition.Binding>
											</Condition>
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.EnterActions>
											<BeginStoryboard Name="CHigherEnter" HandoffBehavior="SnapshotAndReplace" >
												<Storyboard>
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RotationY" To="-20" />
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.EnterActions>
										<MultiDataTrigger.ExitActions>
											<StopStoryboard BeginStoryboardName="CHigherEnter"/>
										</MultiDataTrigger.ExitActions>
									</MultiDataTrigger>
									<!--//////////////////////////////////////////////////////////////////////////////////////////////////-->

									<!--Layout Horizontal //////////////////////////////////////////////////////////////////////////////////////////////////-->
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding ListOrientation, ElementName=UI}" Value="Horizontal" />
											<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.EnterActions>
											<BeginStoryboard HandoffBehavior="SnapshotAndReplace" >
												<Storyboard >
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="1.3" />
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleY" To="1.3" />
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.EnterActions>
										<MultiDataTrigger.ExitActions>
											<BeginStoryboard HandoffBehavior="SnapshotAndReplace" >
												<Storyboard>
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="1" />
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleY" To="1" />
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.ExitActions>
									</MultiDataTrigger>
									<!-- //////////////////////////////////////////////////////////////////////////////////////////////////-->

									<!--Layout Vertical //////////////////////////////////////////////////////////////////////////////////////////////////-->
									<MultiDataTrigger>
										<MultiDataTrigger.Conditions>
											<Condition Binding="{Binding ListOrientation, ElementName=UI}" Value="Vertical" />
											<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True"/>
										</MultiDataTrigger.Conditions>
										<MultiDataTrigger.EnterActions>
											<BeginStoryboard HandoffBehavior="SnapshotAndReplace" >
												<Storyboard >
													<!--<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="RotationY" To="0"  />-->
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="1.1" />
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleY" To="1.1" />
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.EnterActions>
										<MultiDataTrigger.ExitActions>
											<BeginStoryboard HandoffBehavior="SnapshotAndReplace" >
												<Storyboard>
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleX" To="1" />
													<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="LayoutTransform.ScaleY" To="1" />
												</Storyboard>
											</BeginStoryboard>
										</MultiDataTrigger.ExitActions>
									</MultiDataTrigger>
									<!-- //////////////////////////////////////////////////////////////////////////////////////////////////-->

								</Style.Triggers>
							</Style>
						</controls:Surface3D.Style>

						<!-- Item Template //////////////////////////////////////////////////////////////////////////////////////////////////-->
						<Border x:Name="focus" 
						        Width="{Binding ActualWidth,ElementName=surface3d,Mode=OneWay}" 
								Height="{Binding Height,ElementName=surface3d,Mode=OneWay}"
                                BorderThickness="{Binding CurrentLayout.BorderThickness, Converter={StaticResource ThicknessConverter},Mode=OneWay, ElementName=UI}"
                                CornerRadius="{Binding CurrentLayout.CornerRadius, Converter={StaticResource CornerRadiusConverter},Mode=OneWay, ElementName=UI}" >
							<Border.Style>
								<Style TargetType="Border" >
									<Setter Property="Background" Value="{Binding CurrentLayout.NoFocusBrush, Converter={StaticResource BrushConverter},Mode=OneWay, ElementName=UI}" />
									<Setter Property="BorderBrush" Value="{Binding CurrentLayout.NoFocusBorderBrush, Converter={StaticResource BrushConverter},Mode=OneWay, ElementName=UI}" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
											<Setter Property="Background" Value="{Binding CurrentLayout.FocusBrush, Converter={StaticResource BrushConverter},Mode=OneWay, ElementName=UI}" />
											<Setter Property="BorderBrush" Value="{Binding CurrentLayout.FocusBorderBrush, Converter={StaticResource BrushConverter},Mode=OneWay, ElementName=UI}" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Border.Style>
							<Grid>
								<Border x:Name="Shading" 
                                      Background="{Binding CurrentLayout.ShadeBrush, Converter={StaticResource BrushConverter},Mode=OneWay, ElementName=UI}" 
                                        CornerRadius="{Binding ElementName=focus, Path=CornerRadius,Mode=OneWay}">
									<Grid>
										<Border x:Name="imgBorder" 
										        Margin="{Binding CurrentLayout.ImageMargin, Converter={StaticResource ThicknessConverter},Mode=OneWay, ElementName=UI}"
												HorizontalAlignment="{Binding CurrentLayout.ImageHorizontalAlignment,Mode=OneWay, ElementName=UI}" 
						                        VerticalAlignment="{Binding CurrentLayout.ImageVerticalAlignment,Mode=OneWay, ElementName=UI}"
												Visibility="{Binding CurrentLayout.EnableImage, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, ElementName=UI}">
											<controls:RoundedImage 
											
										
														  Stretch="{Binding CurrentLayout.ImageStretch,Mode=OneWay, ElementName=UI}"
														  Source="{Binding Image}"
														  CornerRadius="{Binding CurrentLayout.ImageCornerRadius,Mode=OneWay, ElementName=UI}" >
											</controls:RoundedImage>
										</Border>

										<TextBlock Text="{Binding Label}"
											   HorizontalAlignment="{Binding CurrentLayout.LabelHorizontalAlignment,Mode=OneWay, ElementName=UI}" 
						                       VerticalAlignment="{Binding CurrentLayout.LabelVerticalAlignment,Mode=OneWay, ElementName=UI}"
											   FontFamily="{Binding CurrentLayout.FontType, Converter={StaticResource FontConverter},Mode=OneWay, ElementName=UI}" 
											   FontSize="{Binding CurrentLayout.FontSize,Mode=OneWay, ElementName=UI}" 
											   FontWeight="{Binding CurrentLayout.FontWeight, Converter={StaticResource FontConverter},Mode=OneWay, ElementName=UI}"
											   Margin="{Binding CurrentLayout.LabelMargin, ElementName=UI, Converter={StaticResource ThicknessConverter}}" 
											   Visibility="{Binding CurrentLayout.EnableLabel, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, ElementName=UI}">
											<TextBlock.Style>
												<Style TargetType="TextBlock">
													<Setter Property="Foreground" Value="{Binding CurrentLayout.NoFocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay, ElementName=UI}" />
													<Style.Triggers>
														<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
															<Setter Property="Foreground" Value="{Binding CurrentLayout.FocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay, ElementName=UI}" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</TextBlock.Style>
										</TextBlock>
									</Grid>
								</Border>
								<Border x:Name="Gloss" 
										Background="{Binding CurrentLayout.GlossBrush, Converter={StaticResource BrushConverter},Mode=OneWay, ElementName=UI}" 
										CornerRadius="{Binding ElementName=focus, Path=CornerRadius,Mode=OneWay}" />
							</Grid>
						
						</Border>
					</controls:Surface3D>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>
	</Grid>
</UserControl>
