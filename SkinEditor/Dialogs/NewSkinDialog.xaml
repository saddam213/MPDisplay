<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:SkinEditor.Helpers"
        xmlns:implementation="clr-namespace:MPDisplay.Common.Controls;assembly=MPDisplay.UICommon"
        x:Class="SkinEditor.Dialogs.NewSkinDialog"
    Title="NewSkinDialog" Height="226.667" Width="300" Name="UI" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVisibleConverter" />
    </Window.Resources>
    
    <Grid DataContext="{Binding ElementName=UI}">
        <Button Content="OK" HorizontalAlignment="Right" Margin="0,0,90,10" VerticalAlignment="Bottom" Width="75" Click="Button_OK_Click">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding ElementName=skinName,Path=(Validation.Errors)[0].ErrorContent}" Value="{x:Null}" />
                                <Condition  Binding="{Binding ElementName=skinPath,Path=(Validation.Errors)[0].ErrorContent}" Value="{x:Null}" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Cancel" HorizontalAlignment="Right" Margin="0,0,10,10" VerticalAlignment="Bottom" Width="75" Click="Button_Cancel_Click"/>
        <StackPanel Margin="10,10,10,37">
            <TextBlock TextWrapping="Wrap" Text="Name"/>
            <!-- ReSharper disable once InconsistentNaming -->
            <TextBox x:Name="skinName" Height="23" TextWrapping="Wrap" Margin="0,0,139,0">
                <TextBox.Text>
                    <Binding Path="SkinName" UpdateSourceTrigger="PropertyChanged" >
                        <Binding.ValidationRules>
                            <helpers:FilePathValidationRule ValidatesOnTargetUpdated="True" Message="The skin name" IsFileNameOnly="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Margin="0,3,0,0" TextWrapping="Wrap" Text="Working Directory"/>
            <Grid Height="23">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="23"/>
                </Grid.ColumnDefinitions>
                <Button Content=".." Grid.Column="1" Click="Button_Browse_Click" />
                <!-- ReSharper disable once InconsistentNaming -->
                <TextBox Grid.Column="0" x:Name="skinPath" IsReadOnly="True" TextWrapping="Wrap" Margin="0,0,3,0">
                    <TextBox.Text>
                        <Binding Path="SkinFolder" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <helpers:FilePathValidationRule ValidatesOnTargetUpdated="True" Message="skin folder" IsFilePathOnly="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>
            <Grid Margin="0,3,0,0" Height="36" Visibility="{Binding IsNewSkin, Converter={StaticResource BoolToVisibleConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Margin="0,0,5,0">
                    <TextBlock TextWrapping="Wrap" Text="Width"/>
                    <implementation:IntegerUpDown Minimum="100" Value="{Binding SkinWidth}"/>
                </StackPanel>
                <StackPanel Margin="5,0,0,0" Grid.Column="1">
                    <TextBlock TextWrapping="Wrap" Text="Height"/>
                    <implementation:IntegerUpDown Minimum="100" Value="{Binding SkinHeight}"/>
                </StackPanel>
            </Grid>
        </StackPanel>

    </Grid>
</Window>
