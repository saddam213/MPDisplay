<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:skinControls="clr-namespace:GUISkinFramework.Skin;assembly=GUISkinFramework" 
                    xmlns:skinWindows="clr-namespace:GUISkinFramework.Skin;assembly=GUISkinFramework" 
                    xmlns:skinDialogs="clr-namespace:GUISkinFramework.Skin;assembly=GUISkinFramework" 
                    xmlns:xmlConverters="clr-namespace:GUISkinFramework.Converters;assembly=GUISkinFramework"
					xmlns:commonControls="clr-namespace:MPDisplay.Common.Controls;assembly=MPDisplay.UICommon"
					xmlns:commonControlsS3D="clr-namespace:MPDisplay.Common.Controls.Surface3D;assembly=MPDisplay.UICommon"
					xmlns:commonConverters="clr-namespace:MPDisplay.Common.BindingConverters;assembly=MPDisplay.UICommon"
					xmlns:skinSubControls="clr-namespace:SkinEditor.Controls"
            		xmlns:skinEditorConverters="clr-namespace:SkinEditor.BindingConverters" 
					xmlns:views="clr-namespace:SkinEditor.Themes" >


    <ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/GUIFramework;component/Themes/Generic.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<ColorConverter x:Key="ColorConverter" />
	<xmlConverters:XmlThicknessConverter  x:Key="ThicknessConverter" />
	<xmlConverters:XmlFontConverter  x:Key="FontConverter" />
	<xmlConverters:XmlCornerRadiusConverter x:Key="CornerRadiusConverter"/>
	<xmlConverters:XmlEQStyleEnumConverter x:Key="EqStyleEnumConverter" />


	<commonConverters:ColorToStringConverter x:Key="ColorToStringConverter" />
	<commonConverters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
	<commonConverters:InverseNullToVisibilityConverter x:Key="InverseNullToVisibilityConverter" />
	<commonConverters:EnumMatchToBooleanConverter x:Key="EnumMatchToBooleanConverter" />
	

	<skinEditorConverters:ColorBrushConverter x:Key="ColorBrushConverter"/>
	<skinEditorConverters:DummyListItemsConverter x:Key="DummyListItemsConverter" />


	<skinEditorConverters:SkinEditorXmlLabelConverter x:Key="LabelConverter" />
	<skinEditorConverters:SkinEditorXmlImageConverter x:Key="ImageConverter" />
	<skinEditorConverters:SkinEditorXmlBrushConverter x:Key="BrushConverter" />
	<skinEditorConverters:SkinEditorProgressValueConverter x:Key="PercentToWidth" />
	<skinEditorConverters:SkinEditorProgressLabelConverter x:Key="PercentToMargin" />

    <!-- ReSharper disable Xaml.RedundantAttachedProperty -->
	<!-- ReSharper disable Xaml.BindingWithoutContextNotResolved -->

    <Style TargetType="{x:Type TextBlock}">
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="True">
				<Setter Property="Foreground" Value="Black" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="itemsControl" TargetType="ListBox">
		<Setter Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0" />
	</Style>

	<Style x:Key="PositionHost" TargetType="ListBoxItem">
		<Setter Property="Canvas.Left" Value="{Binding PosX, Mode=TwoWay}" />
		<Setter Property="Canvas.Top" Value="{Binding Path=PosY}" />
		<Setter Property="Canvas.ZIndex" Value="{Binding Path=PosZ}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template" >
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid>
						<ContentPresenter />
						<commonControls:MoveResizeControl
		           			Width="{Binding Width, Mode=TwoWay}"
							Height="{Binding Height, Mode=TwoWay}"
							Canvas.Left="{Binding PosX, Mode=TwoWay}"
							Canvas.Top="{Binding PosY, Mode=TwoWay}" >
						</commonControls:MoveResizeControl>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ItemsPanelTemplate x:Key="CanvasItemsPanel">
		<Canvas IsItemsHost="True" >
		</Canvas>
	</ItemsPanelTemplate>

	<DataTemplate DataType="{x:Type skinWindows:XmlMPWindow}" >
		<Border Width="{Binding Width, Mode=OneWay}" 
		        Height="{Binding Height, Mode=OneWay}"
                Background="{Binding BackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" >
			<ListBox Style="{StaticResource itemsControl}" 
			         ItemContainerStyle="{StaticResource PositionHost}"
			         ItemsPanel="{StaticResource CanvasItemsPanel}"
		             ItemsSource="{Binding Controls}"
					 Background="Transparent" 
					 SelectedItem="{Binding CurrentXmlControl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:EditorViewModel}}}" >
			</ListBox>
		</Border>
	</DataTemplate>

	<DataTemplate DataType="{x:Type skinWindows:XmlMPDWindow}"   >
		<Border Width="{Binding Width, Mode=OneWay}" 
		        Height="{Binding Height, Mode=OneWay}"
                Background="{Binding BackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" >
			<ListBox Style="{StaticResource itemsControl}" 
			         ItemContainerStyle="{StaticResource PositionHost}"
			         ItemsPanel="{StaticResource CanvasItemsPanel}"
		             ItemsSource="{Binding Controls}"
				     Background="Transparent"
				     SelectedItem="{Binding CurrentXmlControl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:EditorViewModel}}}" >
			</ListBox>
		</Border>
	</DataTemplate>

	<DataTemplate DataType="{x:Type skinWindows:XmlPlayerWindow}"   >
		<Border Width="{Binding Width, Mode=OneWay}" 
		        Height="{Binding Height, Mode=OneWay}"
                Background="{Binding BackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" >
			<ListBox Style="{StaticResource itemsControl}" 
			         ItemContainerStyle="{StaticResource PositionHost}"
			         ItemsPanel="{StaticResource CanvasItemsPanel}"
		             ItemsSource="{Binding Controls}"
				     Background="Transparent"
				     SelectedItem="{Binding CurrentXmlControl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:EditorViewModel}}}" >
			</ListBox>
		</Border>
	</DataTemplate>

	<DataTemplate DataType="{x:Type skinDialogs:XmlMPDialog}"  >
		<Border Width="{Binding Width}" 
		        Height="{Binding Height}"
                Background="{Binding BackgroundBrush, Converter={StaticResource BrushConverter},Mode=OneWay}"
                BorderBrush="{Binding BorderBrush, Converter={StaticResource BrushConverter},Mode=OneWay}"
                BorderThickness="{Binding BorderThickness, Converter={StaticResource ThicknessConverter},Mode=OneWay}"
                CornerRadius="{Binding CornerRadius, Converter={StaticResource CornerRadiusConverter},Mode=OneWay}" >
			<ListBox Style="{StaticResource itemsControl}" 
			         ItemContainerStyle="{StaticResource PositionHost}"
			         ItemsPanel="{StaticResource CanvasItemsPanel}"
		             ItemsSource="{Binding Controls}"
				     Background="Transparent"
				     SelectedItem="{Binding CurrentXmlControl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:EditorViewModel}}}" >
			</ListBox>
		</Border>
	</DataTemplate>

	<DataTemplate DataType="{x:Type skinDialogs:XmlMPDDialog}"  >
		<Border Width="{Binding Width}" 
		        Height="{Binding Height}"
                Background="{Binding BackgroundBrush, Converter={StaticResource BrushConverter}}"
                BorderBrush="{Binding BorderBrush, Converter={StaticResource BrushConverter}}"
                BorderThickness="{Binding BorderThickness, Converter={StaticResource ThicknessConverter},Mode=OneWay}"
                CornerRadius="{Binding CornerRadius, Converter={StaticResource CornerRadiusConverter}}" >
			<ListBox Style="{StaticResource itemsControl}" 
			         ItemContainerStyle="{StaticResource PositionHost}"
			         ItemsPanel="{StaticResource CanvasItemsPanel}"
		             ItemsSource="{Binding Controls}"
				     Background="Transparent" 
				     SelectedItem="{Binding CurrentXmlControl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:EditorViewModel}}}" >
			</ListBox>
		</Border>
	</DataTemplate>

	<DataTemplate DataType="{x:Type skinControls:XmlButton}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" 
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
			<Border x:Name="focus" 
		        Width="{Binding Width,Mode=OneWay}" 
			    Height="{Binding Height,Mode=OneWay}"
		        BorderThickness="{Binding ControlStyle.BorderThickness, Converter={StaticResource ThicknessConverter},Mode=OneWay}"
                CornerRadius="{Binding ControlStyle.CornerRadius, Converter={StaticResource CornerRadiusConverter},Mode=OneWay}" >
				<Border.Style>
					<Style TargetType="Border" >
						<Setter Property="Background" Value="{Binding ControlStyle.NoFocusBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
						<Setter Property="BorderBrush" Value="{Binding ControlStyle.NoFocusBorderBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsMouseDown, RelativeSource={RelativeSource AncestorType={x:Type commonControlsS3D:Surface3D}}}" Value="True">
								<Setter Property="Background" Value="{Binding ControlStyle.FocusBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
								<Setter Property="BorderBrush" Value="{Binding ControlStyle.FocusBorderBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Border.Style>
				<Grid>
					<Border x:Name="Shading" 
                    Background="{Binding ControlStyle.ShadeBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" 
                    CornerRadius="{Binding ElementName=focus, Path=CornerRadius,Mode=OneWay}">

						<Grid>
							<Border Margin="{Binding ControlStyle.ImageMargin,Converter={StaticResource ThicknessConverter},Mode=OneWay}" x:Name="imgBorder"
						        HorizontalAlignment="{Binding ControlStyle.ImageHorizontalAlignment,Mode=OneWay}" 
						        VerticalAlignment="{Binding ControlStyle.ImageVerticalAlignment,Mode=OneWay}" 
								Visibility="{Binding ControlStyle.EnableImage, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
								<commonControls:RoundedImage 
													      Stretch="{Binding ControlStyle.ImageStretch,Mode=OneWay}"
														  Source="{Binding Image,Converter={StaticResource ImageConverter}, Mode=OneWay}"
														  CornerRadius="{Binding ControlStyle.ImageCornerRadius,Mode=OneWay}"  >
								</commonControls:RoundedImage>
							</Border>

							<TextBlock Text="{Binding LabelText, Converter={StaticResource LabelConverter},Mode=OneWay}"
                               HorizontalAlignment="{Binding ControlStyle.LabelHorizontalAlignment,Mode=OneWay}"
						       VerticalAlignment="{Binding ControlStyle.LabelVerticalAlignment,Mode=OneWay}"
                               FontFamily="{Binding ControlStyle.FontType, Converter={StaticResource FontConverter},Mode=OneWay}" 
                               FontSize="{Binding ControlStyle.FontSize,Mode=OneWay}" 
                               FontWeight="{Binding ControlStyle.FontWeight, Converter={StaticResource FontConverter},Mode=OneWay}"
							   Margin="{Binding ControlStyle.LabelMargin}" 
							   Visibility="{Binding ControlStyle.EnableLabel, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Setter Property="Foreground" Value="{Binding ControlStyle.NoFocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsMouseDown, RelativeSource={RelativeSource AncestorType={x:Type commonControlsS3D:Surface3D}}}" Value="True">
												<Setter Property="Foreground" Value="{Binding ControlStyle.FocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Grid>
					</Border>
					<Border x:Name="Gloss" 
                        Background="{Binding ControlStyle.GlossBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" 
                        CornerRadius="{Binding ElementName=focus, Path=CornerRadius,Mode=OneWay}" />
				</Grid>
			</Border>
			<commonControlsS3D:Surface3D.Style>
				<Style TargetType="{x:Type commonControlsS3D:Surface3D}">
					<Style.Triggers>
						<DataTrigger  Binding="{Binding IsMouseDown, RelativeSource={RelativeSource Self}}" Value="True">
							<DataTrigger.EnterActions>
								<BeginStoryboard HandoffBehavior="SnapshotAndReplace" >
									<Storyboard >
										<DoubleAnimation Duration="0:0:0.15" Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.98" />
										<DoubleAnimation Duration="0:0:0.15" Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.98" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
								<BeginStoryboard HandoffBehavior="SnapshotAndReplace" >
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.15" Storyboard.TargetProperty="RenderTransform.ScaleX" To="1" />
										<DoubleAnimation Duration="0:0:0.15" Storyboard.TargetProperty="RenderTransform.ScaleY" To="1" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.ExitActions>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</commonControlsS3D:Surface3D.Style>
		</commonControlsS3D:Surface3D>
	</DataTemplate>

	<DataTemplate DataType="{x:Type skinControls:XmlGroup}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" 
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
		<Border x:Name="background" Width="{Binding Width, Mode=OneWay}" Height="{Binding Height, Mode=OneWay}"
                Background="{Binding ControlStyle.BackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                BorderBrush="{Binding ControlStyle.BorderBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                BorderThickness="{Binding ControlStyle.BorderThickness, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
                CornerRadius="{Binding ControlStyle.CornerRadius, Converter={StaticResource CornerRadiusConverter}, Mode=OneWay}" >

			<Border x:Name="focusShading" Background="{Binding ControlStyle.ShadeBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" CornerRadius="{Binding ElementName=background, Path=CornerRadius, Mode=OneWay}">
				<Border x:Name="focusgloss" Background="{Binding ControlStyle.GlossBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" CornerRadius="{Binding ElementName=background, Path=CornerRadius, Mode=OneWay}">
						<ListBox Style="{StaticResource itemsControl}" 
						  ItemContainerStyle="{StaticResource PositionHost}"
			              ItemsPanel="{StaticResource CanvasItemsPanel}"
		                  ItemsSource="{Binding Controls}"
						  Background="Transparent"
						  SelectedItem="{Binding CurrentXmlControl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:EditorViewModel}}}" >
						</ListBox>
					</Border>
            </Border>
        </Border>
		</commonControlsS3D:Surface3D>
	</DataTemplate>

    <DataTemplate DataType="{x:Type skinControls:XmlRectangle}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" 
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
		<Border x:Name="background" Width="{Binding Width, Mode=OneWay}" Height="{Binding Height, Mode=OneWay}"
                Background="{Binding BackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                BorderBrush="{Binding BorderBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                BorderThickness="{Binding BorderThickness, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
                CornerRadius="{Binding CornerRadius, Converter={StaticResource CornerRadiusConverter}, Mode=OneWay}" >
			<Border x:Name="focusShading" Background="{Binding ShadeBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" CornerRadius="{Binding ElementName=background, Path=CornerRadius, Mode=OneWay}">
				<Border x:Name="focusgloss" Background="{Binding GlossBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" CornerRadius="{Binding ElementName=background, Path=CornerRadius, Mode=OneWay}" />
            </Border>
        </Border>
		</commonControlsS3D:Surface3D>
	</DataTemplate>

    <DataTemplate DataType="{x:Type skinControls:XmlLabel}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" 
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">

			<commonControls:ScrollingTextBlock Width="{Binding Width, Mode=OneWay}" 
			                                   Height="{Binding Height, Mode=OneWay}"
											   FontFamily="{Binding ControlStyle.FontType, Converter={StaticResource FontConverter}, Mode=OneWay}" 
											   FontSize="{Binding ControlStyle.FontSize, Mode=OneWay}" 
                                               TextBlock.LineHeight="{Binding LineHeight, Mode=OneWay}"
                                               TextBlock.LineStackingStrategy="BlockLineHeight"
											   Foreground="{Binding ControlStyle.FontBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" 
											   FontWeight="{Binding ControlStyle.FontWeight, Converter={StaticResource FontConverter}, Mode=OneWay}"
											   Text="{Binding LabelText, Converter={StaticResource LabelConverter}, Mode=OneWay}"
											   IsScrollingEnabled="{Binding IsScrollingEnabled, Mode=OneWay}"
											   TextAlignment="{Binding LabelTextAlignment, Mode=OneWay}"
											   IsWrapEnabled="{Binding IsScrollWrapEnabled, Mode=OneWay}"
											   IsVertical="{Binding IsVertical, Mode=OneWay}"
											   ScrollDelay="{Binding ScrollDelay, Mode=OneWay}"
											   ScrollSpeed="{Binding ScrollSpeed, Mode=OneWay}"
											   ScrollSeperator="{Binding ScrollSeperator, Mode=OneWay}">
			</commonControls:ScrollingTextBlock>
		</commonControlsS3D:Surface3D>
	</DataTemplate>


    <DataTemplate DataType="{x:Type skinControls:XmlImage}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" 
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border x:Name="border" 
                    Width="{Binding Width, Mode=OneWay}"
                    Height="{Binding Height, Mode=OneWay}" 
                    Background="{Binding ControlStyle.BackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                    BorderBrush="{Binding ControlStyle.BorderBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                    BorderThickness="{Binding ControlStyle.BorderThickness, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
                    CornerRadius="{Binding ControlStyle.CornerRadius, Converter={StaticResource CornerRadiusConverter}, Mode=OneWay}" >
                <Grid>
					<commonControls:RoundedImage x:Name="image"
                                                  Margin="{Binding ImageMargin, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
                                                  Source="{Binding Image, Converter={StaticResource ImageConverter}, Mode=OneWay}" 
                                                  CornerRadius="{Binding ImageCornerRadius, Mode=OneWay}" 
                                                  Stretch="{Binding ImageStretch, Mode=OneWay}"
                                                  HorizontalAlignment="{Binding BaseXml.ControlStyle.ImageHorizontalAlignment,Mode=OneWay}" 
						                          VerticalAlignment="{Binding BaseXml.ControlStyle.ImageVerticalAlignment,Mode=OneWay}" />
				<Border Margin="{Binding ImageMargin, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
                        Background="{Binding CoverImage, Converter={StaticResource BrushConverter}, Mode=OneWay}" 
                        CornerRadius="{Binding CoverCornerRadius, Converter={StaticResource CornerRadiusConverter}, Mode=OneWay}"/>
                    <Grid Visibility="{Binding ShowMapControls, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button HorizontalAlignment="Left" Margin="7.667,71.359,0,0" VerticalAlignment="Top" Width="24.667" Height="25.107" Content="" 
                        Template="{DynamicResource ZoomInButtonCtrlTemplate}" Cursor="Hand" x:Name="ZoomInButton" IsEnabled="True" />
                        <Button Cursor="Hand" HorizontalAlignment="Left" Margin="7.667,38.696,0,0" x:Name="ZoomOutButton" VerticalAlignment="Top" Width="24.667" Height="25.107" Content=""
                        Template="{DynamicResource ZoomOutButtonCtrlTemplate}" IsEnabled="True" />
                        <Button Margin="0,5,86,0" VerticalAlignment="Top" Height="23" Content="Roadmap" Width="78" HorizontalAlignment="Right"
                        Template="{DynamicResource RoadmapButtonCtrlTemplate}" Cursor="Hand" x:Name="RoadmapToggleButton" IsEnabled="True"/>
                        <Button Margin="0,5,6,0" VerticalAlignment="Top" Height="23" Content="" Width="78" HorizontalAlignment="Right"
                        Template="{DynamicResource TerrainToggleButtonCtrlTemplate}" x:Name="TerrainToggleButton" Cursor="Hand" IsEnabled="True"/>
                        <Viewbox HorizontalAlignment="Right" Margin="0,0,9.999,12.717" VerticalAlignment="Bottom" Width="66.001" Height="43.636" Stretch="Fill" x:Name="MoveBtnsVwBox">
                            <Grid Width="82.001" Height="54.2139999999999">
                                <Button Height="25.107" Content="" Template="{DynamicResource UpButtonCtrlTemplate}" x:Name="MoveUpButton" IsEnabled="True"
                                Margin="28.667,0,28.667,0" VerticalAlignment="Top"/>
                                <Button x:Name="MoveDownButton" Height="25.107" Content="" Template="{DynamicResource DownButtonCtrlTemplate}" IsEnabled="True"
                                Margin="28.667,0,28.667,0" VerticalAlignment="Bottom"/>
                                <Button x:Name="MoveLeftButton" Width="24.667" Content="" Template="{DynamicResource LeftButtonCtrlTemplate}" IsEnabled="True"
                                HorizontalAlignment="Left" Margin="0,14.337,0,14.77"/>
                                <Button x:Name="MoveRightButton" Width="24.667" Content="" Template="{DynamicResource RightButtonCtrlTemplate}" IsEnabled="True"
                                HorizontalAlignment="Right" Margin="0,14.337,0,14.77"/>
                            </Grid>
                        </Viewbox>
                    </Grid>

                </Grid>
            </Border>
		</commonControlsS3D:Surface3D>
	</DataTemplate>


    <ControlTemplate x:Key="ZoomInButtonCtrlTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="#CB000000" Stroke="#F17693A1" RadiusX="3.5" RadiusY="3.5" x:Name="ZoomInBgrndRct"/>
            <Path Fill="#F1FFFFFF" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0.5" Margin="5.83,6.083,5.83,6.083" RenderTransformOrigin="0.500000003172494,0.500000010877122"
                  Data="M7.5809999,0 L9.2529998,0 C9.747295,0 10.148,0.40070518 10.148,0.89499998 L10.148,6.6859999 15.939,6.6859999 C16.433293,6.6859999 16.834,7.0867053 16.834,
                  7.5809999 L16.834,9.2530003 C16.834,9.7472935 16.433293,10.148 15.939,10.148 L10.148,10.148 10.148,15.939 C10.148,16.433297 9.7472936,16.834 9.2529998,16.834 L7.5809999,
                  16.834 C7.0867063,16.834 6.6859998,16.433297 6.6859999,15.939 L6.6859999,10.148 0.89499998,10.148 C0.40070413,10.148 0,9.7472927 0,9.2530003 L0,7.5809999 C0,
                  7.086706 0.4007045,6.6859999 0.89499998,6.6859999 L6.6859999,6.6859999 6.6859999,0.89499998 C6.6859998,0.4007051 7.086705,0 7.5809999,0 z"
                  x:Name="Cross">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="90"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Cross" Value="#F14FB9E0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ZoomOutButtonCtrlTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="#CB000000" Stroke="#F17693A1" RadiusX="3.5" RadiusY="3.5" x:Name="ZoomInBgrndRct"/>
            <Rectangle Fill="#F2FFFFFF" Stroke="{x:Null}" RadiusX="0.648" RadiusY="0.648" HorizontalAlignment="Stretch" Margin="10.929,6.4,10.654,6.684" VerticalAlignment="Stretch"
                       RenderTransformOrigin="0.5,0.5" StrokeThickness="0.5" Opacity="1" x:Name="MinusRct" >
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="90"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="MinusRct" Value="#F14FB9E0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="RoadmapButtonCtrlTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="#CB000000" Stroke="#F17693A1" RadiusX="3.5" RadiusY="3.5" x:Name="ZoomInBgrndRct"/>
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="Roadmap" Foreground="#EEE3E3E3" x:Name="contentControl" FontSize="11"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="contentControl" Value="#FFFFFFFF"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="TerrainToggleButtonCtrlTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="#CB000000" Stroke="#F17693A1" RadiusX="3.5" RadiusY="3.5" x:Name="ZoomInBgrndRct"/>
            <ContentControl HorizontalAlignment="Center" x:Name="contentControl" VerticalAlignment="Center" Content="Terrain" FontSize="11" Foreground="#EEE3E3E3"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="contentControl" Value="#FFFFFFFF"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="LeftButtonCtrlTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="#CB000000" Stroke="#F17693A1" RadiusX="3.5" RadiusY="3.5" x:Name="LeftBgrndRct"/>
            <Path Fill="#F2FFFFFF" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0.5" HorizontalAlignment="Stretch" Margin="10.366,4.491,3.449,8.593"
                  x:Name="LeftArrowPath" VerticalAlignment="Stretch" Opacity="1" RenderTransformOrigin="0.142092680229453,0.500000007691215" 
                  Data="M1.5419999,0 L1.8476233,0.12659333 2.3394138,0.19133873 10.080815,4.6608386 C10.818343,5.0866503 11.071036,6.0297222 10.645226,
                  6.76725 10.219415,7.5047777 9.2763425,7.757473 8.5388145,7.3316612 L3.0840001,4.1823225 3.0840001,10.481 C3.0840001,11.332623 2.3936234,
                  12.023 1.5419999,12.023 0.69037711,12.023 -8.6916135E-08,11.332623 7.1054274E-15,10.481 L7.1054274E-15,1.542 0.18982393,1.0837243 0.2330026,
                  0.75574995 0.36885397,0.6515075 0.45164128,0.45164127 0.83775319,0.29170851 1.1693147,0.037292377 1.3837976,0.065529556 z">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="-1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="-120"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="LeftArrowPath" Value="#F14FB9E0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="RightButtonCtrlTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="#CB000000" Stroke="#F17693A1" RadiusX="3.5" RadiusY="3.5" x:Name="RightBgrndRct"/>
            <Path Fill="#F2FFFFFF" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0.5" HorizontalAlignment="Stretch" Margin="11.201,4.491,2.614,8.593"
                  x:Name="RightArrowPath" VerticalAlignment="Stretch" Opacity="1" RenderTransformOrigin="0.142092680229453,0.500000007691215" 
                  Data="M1.5419999,0 L1.8476233,0.12659333 2.3394138,0.19133873 10.080815,4.6608386 C10.818343,5.0866503 11.071036,6.0297222 10.645226,
                  6.76725 10.219415,7.5047777 9.2763425,7.757473 8.5388145,7.3316612 L3.0840001,4.1823225 3.0840001,10.481 C3.0840001,11.332623 2.3936234,
                  12.023 1.5419999,12.023 0.69037711,12.023 -8.6916135E-08,11.332623 7.1054274E-15,10.481 L7.1054274E-15,1.542 0.18982393,1.0837243 0.2330026,
                  0.75574995 0.36885397,0.6515075 0.45164128,0.45164127 0.83775319,0.29170851 1.1693147,0.037292377 1.3837976,0.065529556 z">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="120"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="RightArrowPath" Value="#F14FB9E0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="UpButtonCtrlTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="#CB000000" Stroke="#F17693A1" RadiusX="3.5" RadiusY="3.5" x:Name="UpBgrndRct"/>
            <Path Fill="#F2FFFFFF" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0.5" HorizontalAlignment="Right" Margin="0,6.241,0.574,6.843" 
                  x:Name="UpArrowPath" VerticalAlignment="Stretch" Opacity="1" RenderTransformOrigin="0.142092680229453,0.500000007691215"
                  Data="M1.5419999,0 L1.8476233,0.12659333 2.3394138,0.19133873 10.080815,4.6608386 C10.818343,5.0866503 11.071036,6.0297222 10.645226,
                  6.76725 10.219415,7.5047777 9.2763425,7.757473 8.5388145,7.3316612 L3.0840001,4.1823225 3.0840001,10.481 C3.0840001,11.332623 2.3936234,
                  12.023 1.5419999,12.023 0.69037711,12.023 -8.6916135E-08,11.332623 7.1054274E-15,10.481 L7.1054274E-15,1.542 0.18982393,1.0837243 0.2330026,
                  0.75574995 0.36885397,0.6515075 0.45164128,0.45164127 0.83775319,0.29170851 1.1693147,0.037292377 1.3837976,0.065529556 z"
                  Width="10.852">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="-1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="-30"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="UpArrowPath" Value="#F14FB9E0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="DownButtonCtrlTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle Fill="#CB000000" Stroke="#F17693A1" RadiusX="3.5" RadiusY="3.5" x:Name="DownBgrndRct"/>
            <Path Fill="#F2FFFFFF" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0.5" HorizontalAlignment="Right" Margin="0,6.991,0.574,6.093"
                  x:Name="DownArrowPath" VerticalAlignment="Stretch" Opacity="1" RenderTransformOrigin="0.142092680229453,0.500000007691215" 
                  Data="M1.5419999,0 L1.8476233,0.12659333 2.3394138,0.19133873 10.080815,4.6608386 C10.818343,5.0866503 11.071036,6.0297222 10.645226,
                  6.76725 10.219415,7.5047777 9.2763425,7.757473 8.5388145,7.3316612 L3.0840001,4.1823225 3.0840001,10.481 C3.0840001,11.332623 2.3936234,
                  12.023 1.5419999,12.023 0.69037711,12.023 -8.6916135E-08,11.332623 7.1054274E-15,10.481 L7.1054274E-15,1.542 0.18982393,1.0837243 0.2330026,
                  0.75574995 0.36885397,0.6515075 0.45164128,0.45164127 0.83775319,0.29170851 1.1693147,0.037292377 1.3837976,0.065529556 z"
                  Width="10.852">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="-1" ScaleY="-1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="30"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="DownArrowPath" Value="#F14FB9E0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type skinControls:XmlProgressBar}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" 
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
		<Border x:Name="background" Width="{Binding Width, Mode=OneWay}" Height="{Binding Height, Mode=OneWay}"
                Background="{Binding ControlStyle.BackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                BorderBrush="{Binding ControlStyle.BorderBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                BorderThickness="{Binding ControlStyle.BorderThickness, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
                CornerRadius="{Binding ControlStyle.CornerRadius, Converter={StaticResource CornerRadiusConverter}, Mode=OneWay}" >
			<Border x:Name="focusShading" Background="{Binding ControlStyle.ShadeBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" CornerRadius="{Binding ElementName=background, Path=CornerRadius, Mode=OneWay}">
                    <Grid  x:Name="bar">

                        <Border HorizontalAlignment="Left" Visibility="{Binding ControlStyle.EnableProgressbar, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                            Margin="{Binding ControlStyle.BarMargin, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
                            Background="{Binding ControlStyle.BarBackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                            BorderBrush="{Binding ControlStyle.BarBorderBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                            BorderThickness="{Binding ControlStyle.BarBorderThickness, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
                            CornerRadius="{Binding ControlStyle.BarCornerRadius, Converter={StaticResource CornerRadiusConverter}, Mode=OneWay}">
                        <Border.Width>
                            <MultiBinding Converter="{StaticResource PercentToWidth}">
                                <Binding Path="ActualWidth" ElementName="bar" Mode="OneWay" />
                                <Binding Path="ProgressValue" Mode="OneWay" />
                                <Binding Path="ControlStyle.BarMargin" Mode="OneWay" />
                            </MultiBinding>
                        </Border.Width>
                    </Border>
                        <Border x:Name="focusgloss" Visibility="{Binding ControlStyle.EnableProgressbar, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                            Background="{Binding ControlStyle.GlossBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                            CornerRadius="{Binding ElementName=background, Path=CornerRadius, Mode=OneWay}" />

                        <TextBlock x:Name="labelfixed" Text="{Binding LabelFixedText, Converter={StaticResource LabelConverter},Mode=OneWay}"
                               HorizontalAlignment="{Binding ControlStyle.LabelFixedHorizontalAlignment,Mode=OneWay}"
						       VerticalAlignment="{Binding ControlStyle.LabelFixedVerticalAlignment,Mode=OneWay}"
                               FontFamily="{Binding ControlStyle.LabelFixedFontType, Converter={StaticResource GUIFontConverter},Mode=OneWay}" 
                               FontSize="{Binding ControlStyle.LabelFixedFontSize,Mode=OneWay}" 
                               FontWeight="{Binding ControlStyle.LabelFixedFontWeight, Converter={StaticResource GUIFontConverter},Mode=OneWay}"
                               Foreground="{Binding ControlStyle.LabelFixedFontBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay}"
							   Margin="{Binding ControlStyle.LabelFixedMargin}" 
							   Visibility="{Binding ControlStyle.EnableLabelFixed, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                        </TextBlock>

                        <TextBlock x:Name="labelmoving" Text="{Binding LabelMovingText, Converter={StaticResource LabelConverter},Mode=OneWay}"
                               HorizontalAlignment="Left"
						       VerticalAlignment="{Binding ControlStyle.LabelMovingVerticalAlignment,Mode=OneWay}"
                               FontFamily="{Binding ControlStyle.LabelMovingFontType, Converter={StaticResource GUIFontConverter},Mode=OneWay}" 
                               FontSize="{Binding ControlStyle.LabelMovingFontSize,Mode=OneWay}" 
                               FontWeight="{Binding ControlStyle.LabelMovingFontWeight, Converter={StaticResource GUIFontConverter},Mode=OneWay}"
                               Foreground="{Binding ControlStyle.LabelMovingFontBrush, Converter={StaticResource GUIBrushConverter},Mode=OneWay}"
							   Visibility="{Binding ControlStyle.EnableLabelMoving, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                               <TextBlock.Margin>
                                    <MultiBinding Converter="{StaticResource PercentToMargin}">
                                        <Binding Path="ActualWidth" ElementName="bar" Mode="OneWay" />
                                        <Binding Path="ProgressValue" Mode="OneWay" />
                                        <Binding Path="ControlStyle.BarMargin" Mode="OneWay" />
                                        <Binding Path="ControlStyle.LabelMovingMargin" Mode="OneWay" />
                                        <Binding Path="ActualWidth" ElementName="labelmoving" Mode="OneWay" />
                                    </MultiBinding>
                                </TextBlock.Margin>
                        </TextBlock>

                    </Grid>
            </Border>
        </Border>
		</commonControlsS3D:Surface3D>
	</DataTemplate>

 
	<DataTemplate DataType="{x:Type skinControls:XmlList}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" 
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
		<Border x:Name="background" Width="{Binding Width, Mode=OneWay}" Height="{Binding Height, Mode=OneWay}"  
                Background="{Binding ControlStyle.BackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                BorderBrush="{Binding ControlStyle.BorderBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
                BorderThickness="{Binding ControlStyle.BorderThickness, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
                CornerRadius="{Binding ControlStyle.CornerRadius, Converter={StaticResource CornerRadiusConverter}, Mode=OneWay}" >
			<Border x:Name="focusShading" Background="{Binding ControlStyle.ShadeBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}" CornerRadius="{Binding ElementName=background, Path=CornerRadius, Mode=OneWay}">
					<skinSubControls:CoverFlowListBox LayoutVertical="{Binding VerticalItemStyle, Mode=OneWay}"
												 LayoutVerticalIcon="{Binding VerticalIconItemStyle, Mode=OneWay}"
												 LayoutHorizontal="{Binding HorizontalItemStyle, Mode=OneWay}"
												 LayoutCoverFlow="{Binding CoverFlowItemStyle, Mode=OneWay}"
												 ListOrientation="{Binding ListLayout}" >
                        <skinSubControls:CoverFlowListBox.ListItems>
                            <MultiBinding Converter="{StaticResource DummyListItemsConverter}">
                                <Binding Path="ListType" />
                                <Binding Path="ListLayout" />
                            </MultiBinding>
                        </skinSubControls:CoverFlowListBox.ListItems>
				</skinSubControls:CoverFlowListBox>
			</Border>
        </Border>
		</commonControlsS3D:Surface3D>
    </DataTemplate>

	<DataTemplate DataType="{x:Type skinControls:XmlEqualizer}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" 
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
			<Border x:Name="background" 
			        Width="{Binding Width, Mode=OneWay}"
					Height="{Binding Height, Mode=OneWay}"
					Background="{Binding ControlStyle.BackgroundBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
					BorderBrush="{Binding ControlStyle.BorderBrush, Converter={StaticResource BrushConverter}, Mode=OneWay}"
					BorderThickness="{Binding ControlStyle.BorderThickness, Converter={StaticResource ThicknessConverter}, Mode=OneWay}"
					CornerRadius="{Binding ControlStyle.CornerRadius, Converter={StaticResource CornerRadiusConverter}, Mode=OneWay}" >
				<commonControls:EqualizerCanvas Width="{Binding ActualWidth, ElementName=background, Mode=OneWay}" 
				                                Height="{Binding ActualHeight, ElementName=background, Mode=OneWay}" 
											    FallOffColor="{Binding ControlStyle.FallOffColor, Converter={StaticResource BrushConverter}, Mode=OneWay}" 
		                                        FallOffHeight="{Binding FallOffHeight, Mode=OneWay}" 
												FalloffSpeed="{Binding FalloffSpeed, Mode=OneWay}"
												BandCornerRadius="{Binding BandCornerRadius, Mode=OneWay}"
												BandBorderColor="{Binding ControlStyle.BandBorderColor, Converter={StaticResource BrushConverter}, Mode=OneWay}" 
												BandBorderSize="{Binding BandBorderSize, Mode=OneWay}" 
												BandSpacing="{Binding BandSpacing, Mode=OneWay}" 
												BandCount="{Binding BandCount, Mode=OneWay}"
												EQStyle="{Binding EQStyle, Converter={StaticResource EqStyleEnumConverter}, Mode=OneWay}"
                                                EQChannel="{Binding EQChannel, Mode=OneWay}"
												LowRangeValue="{Binding LowRangeValue, Mode=OneWay}"
												MedRangeValue="{Binding MedRangeValue, Mode=OneWay}"
												LowRangeColor="{Binding ControlStyle.LowRangeColor, Converter={StaticResource BrushConverter}, Mode=OneWay}"
												MedRangeColor="{Binding ControlStyle.MedRangeColor, Converter={StaticResource BrushConverter}, Mode=OneWay}"
												MaxRangeColor="{Binding ControlStyle.MaxRangeColor, Converter={StaticResource BrushConverter}, Mode=OneWay}"
												ShowDummyData="{Binding ShowDummyData, Mode=OneWay}"/>
			</Border>
		</commonControlsS3D:Surface3D>
	</DataTemplate>



	<DataTemplate DataType="{x:Type skinControls:XmlListItem}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" 
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
			<Border x:Name="focus" 
		        Width="{Binding Width,Mode=OneWay}" 
			    Height="{Binding Height,Mode=OneWay}"
		        BorderThickness="{Binding ControlStyle.BorderThickness, Converter={StaticResource ThicknessConverter},Mode=OneWay}"
                CornerRadius="{Binding ControlStyle.CornerRadius, Converter={StaticResource CornerRadiusConverter},Mode=OneWay}" >
				<Border.Style>
					<Style TargetType="Border" >
						<Setter Property="Background" Value="{Binding ControlStyle.NoFocusBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
						<Setter Property="BorderBrush" Value="{Binding ControlStyle.NoFocusBorderBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsMouseDown, RelativeSource={RelativeSource AncestorType={x:Type commonControlsS3D:Surface3D}}}" Value="True">
								<Setter Property="Background" Value="{Binding ControlStyle.FocusBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
								<Setter Property="BorderBrush" Value="{Binding ControlStyle.FocusBorderBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Border.Style>
				<Grid>
					<Border x:Name="Shading" 
                    Background="{Binding ControlStyle.ShadeBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" 
                    CornerRadius="{Binding ElementName=focus, Path=CornerRadius,Mode=OneWay}">

						<Grid>
							<!--Image-->
							<Border x:Name="imgBorder" 
										        Margin="{Binding CurrentLayout.ImageMargin, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"
												HorizontalAlignment="{Binding CurrentLayout.ImageHorizontalAlignment,Mode=OneWay, ElementName=UI}" 
						                        VerticalAlignment="{Binding CurrentLayout.ImageVerticalAlignment,Mode=OneWay, ElementName=UI}"
												Visibility="{Binding CurrentLayout.EnableImage, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, ElementName=UI}"
													Background="Black">
								<commonControls:RoundedImage 
														  Stretch="{Binding CurrentLayout.ImageStretch,Mode=OneWay, ElementName=UI}"
														  Source="{Binding Image, Converter={StaticResource GUIImageConverter}}"
														  CornerRadius="{Binding CurrentLayout.ImageCornerRadius,Mode=OneWay, ElementName=UI}" >
								</commonControls:RoundedImage>
							
							</Border>

							<!--Image2-->
							<!--<Border x:Name="imgBorder2" 
										        Margin="{Binding CurrentLayout.Image2Margin, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"
												HorizontalAlignment="{Binding CurrentLayout.Image2HorizontalAlignment,Mode=OneWay, ElementName=UI}" 
						                        VerticalAlignment="{Binding CurrentLayout.Image2VerticalAlignment,Mode=OneWay, ElementName=UI}"
												Visibility="{Binding CurrentLayout.EnableImage2, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, ElementName=UI}"
													Background="{Binding CurrentLayout.DefaultImage2, Converter={StaticResource BrushConverter} ,Mode=OneWay, ElementName=UI}">
								<commonControls:RoundedImage 
														  Stretch="{Binding CurrentLayout.Image2Stretch,Mode=OneWay, ElementName=UI}"
														  Source="{Binding Image2, Converter={StaticResource GUIImageConverter}}"
														  CornerRadius="{Binding CurrentLayout.Image2CornerRadius,Mode=OneWay, ElementName=UI}" >
								</commonControls:RoundedImage>
							</Border>-->

							<!--Image3-->
							<!--<Border x:Name="imgBorder3" 
										        Margin="{Binding CurrentLayout.Image3Margin, Converter={StaticResource GUIThicknessConverter},Mode=OneWay, ElementName=UI}"
												HorizontalAlignment="{Binding CurrentLayout.Image3HorizontalAlignment,Mode=OneWay, ElementName=UI}" 
						                        VerticalAlignment="{Binding CurrentLayout.Image3VerticalAlignment,Mode=OneWay, ElementName=UI}"
												Visibility="{Binding CurrentLayout.EnableImage3, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, ElementName=UI}"
												Background="{Binding CurrentLayout.DefaultImage3, Converter={StaticResource BrushConverter} ,Mode=OneWay, ElementName=UI}">
								<commonControls:RoundedImage 
														  Stretch="{Binding CurrentLayout.Image3Stretch,Mode=OneWay, ElementName=UI}"
														  Source="{Binding Image3, Converter={StaticResource GUIImageConverter}}"
														  CornerRadius="{Binding CurrentLayout.Image3CornerRadius,Mode=OneWay, ElementName=UI}" >
								</commonControls:RoundedImage>
							</Border>-->

							<TextBlock Text="{Binding LabelText, Converter={StaticResource LabelConverter},Mode=OneWay}"
                               HorizontalAlignment="{Binding ControlStyle.LabelHorizontalAlignment,Mode=OneWay}"
						       VerticalAlignment="{Binding ControlStyle.LabelVerticalAlignment,Mode=OneWay}"
                               FontFamily="{Binding ControlStyle.FontType, Converter={StaticResource FontConverter},Mode=OneWay}" 
                               FontSize="{Binding ControlStyle.FontSize,Mode=OneWay}" 
                               FontWeight="{Binding ControlStyle.FontWeight, Converter={StaticResource FontConverter},Mode=OneWay}"
							   Margin="{Binding ControlStyle.LabelMargin,Converter={StaticResource ThicknessConverter},Mode=OneWay}" 
							   Visibility="{Binding ControlStyle.EnableLabel, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Setter Property="Foreground" Value="{Binding ControlStyle.NoFocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsMouseDown, RelativeSource={RelativeSource AncestorType={x:Type commonControlsS3D:Surface3D}}}" Value="True">
												<Setter Property="Foreground" Value="{Binding ControlStyle.FocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>

							<TextBlock Text="{Binding Label2Text, Converter={StaticResource LabelConverter},Mode=OneWay}"
											   HorizontalAlignment="{Binding ControlStyle.Label2HorizontalAlignment,Mode=OneWay}" 
						                       VerticalAlignment="{Binding ControlStyle.Label2VerticalAlignment,Mode=OneWay}"
											   FontFamily="{Binding ControlStyle.Label2FontType, Converter={StaticResource FontConverter},Mode=OneWay}"
											   FontSize="{Binding ControlStyle.Label2FontSize,Mode=OneWay}"
											   FontWeight="{Binding ControlStyle.Label2FontWeight, Converter={StaticResource FontConverter}}"
											   Margin="{Binding ControlStyle.Label2Margin, Converter={StaticResource ThicknessConverter}}" 
											   Visibility="{Binding ControlStyle.EnableLabel2, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Setter Property="Foreground" Value="{Binding ControlStyle.Label2NoFocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsMouseDown, RelativeSource={RelativeSource AncestorType={x:Type commonControlsS3D:Surface3D}}}" Value="True">
												<Setter Property="Foreground" Value="{Binding ControlStyle.Label2FocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>

							<TextBlock Text="{Binding Label3Text, Converter={StaticResource LabelConverter},Mode=OneWay}"
											   HorizontalAlignment="{Binding ControlStyle.Label3HorizontalAlignment,Mode=OneWay}" 
						                       VerticalAlignment="{Binding ControlStyle.Label3VerticalAlignment,Mode=OneWay}"
											   FontFamily="{Binding ControlStyle.Label3FontType, Converter={StaticResource FontConverter},Mode=OneWay}" 
											   FontSize="{Binding ControlStyle.Label3FontSize,Mode=OneWay}" 
											   FontWeight="{Binding ControlStyle.Label3FontWeight, Converter={StaticResource FontConverter},Mode=OneWay}"
											   Margin="{Binding ControlStyle.Label3Margin, Converter={StaticResource ThicknessConverter}}" 
											   Visibility="{Binding ControlStyle.EnableLabel3, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Setter Property="Foreground" Value="{Binding ControlStyle.Label3NoFocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsMouseDown, RelativeSource={RelativeSource AncestorType={x:Type commonControlsS3D:Surface3D}}}" Value="True">
												<Setter Property="Foreground" Value="{Binding ControlStyle.Label3FocusFontBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Grid>
					</Border>
					<Border x:Name="Gloss" 
                        Background="{Binding ControlStyle.GlossBrush, Converter={StaticResource BrushConverter},Mode=OneWay}" 
                        CornerRadius="{Binding ElementName=focus, Path=CornerRadius,Mode=OneWay}" />
				</Grid>
			</Border>
		
		</commonControlsS3D:Surface3D>
	</DataTemplate>




	<DataTemplate DataType="{x:Type skinControls:XmlGuide}"  >
		<commonControlsS3D:Surface3D Width="{Binding Width,Mode=OneWay}" x:Name="UI" DataContext="{Binding}"
			                    Height="{Binding Height,Mode=OneWay}"
								RotationX="{Binding Pos3DX,Mode=OneWay}"
								RotationY="{Binding Pos3DY,Mode=OneWay}"
								RotationZ="{Binding Pos3DZ,Mode=OneWay}"
								RotationCenterX="{Binding Center3DX,Mode=OneWay}"
								RotationCenterY="{Binding Center3DY,Mode=OneWay}"
								RotationCenterZ="{Binding Center3DZ,Mode=OneWay}"
                                Visibility="{Binding DesignerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
			<skinSubControls:Guide Width="{Binding Width,Mode=OneWay}"
			                    Height="{Binding Height,Mode=OneWay}" BaseXml="{Binding DataContext, ElementName=UI}"/>
		</commonControlsS3D:Surface3D>
	</DataTemplate>

</ResourceDictionary>